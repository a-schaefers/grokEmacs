* spartan emacs

  #+ATTR_HTML: :style margin-left: auto; margin-right: auto;
  [[spartan-emacs.jpg]]

  If you feel like spacemacs/doom/prelude/purcell/radian/... are too bloated,
  while rolling your own as described in [[https://github.com/technomancy/emacs-starter-kit][emacs-starter-kit]]
  may be too time consuming... And if you are looking for a simple and well organized base to build on,
  then Spartan Emacs might be a good choice for you.

** quick install

   #+BEGIN_SRC bash
     git clone https://github.com/grandmasterfoobah/spartan-emacs ~/.emacs.d
   #+END_SRC

*** features:

    - simple, clean configuration and a comprehensible layers system
    - prefer built-ins for simplicity, performance, reliability and security reasons
    - no syntax highlighting
    - no M-x customize -- custom-file is set to "/dev/null"
    - auto bootstrap self
    - doesn't mess with use-package, deferral, the pdumper -- doesn't care about start time
    - tested on Linux, but should work also work fine on any gnu/bsd/macos base
    - tested against latest pgtk gccemacs with native json parsing with eglot (language server protocol) for ultimate performance (not required, just recommended)
    - optional evil mode

*** security conscious

    - audit third party packages and track them in vetted/
    - for larger, [difficult to audit] but well reputed third-party packages: prefer gnu elpa > melpa
    - basically the only third-party packages being installed from repos are:

      magit (melpa)
      which pulls in:
      dash (gnu elpa)
      transient (melpa)
      with-editor  (melpa)

      eglot (gnu elpa, only depends on emacs)

      exec-path-from-shell (melpa, only for macos and gnome users)

      evil-mode (melpa, optional-- and whatever dependencies it pulls in)

*** languages preconfigured

    - lisp/scheme
    - bash
    - python

*** how to hack

    - fork repo, clone it, own it

*** how to update

    - config

    `git pull`

    - emacs

**** arch

     `pikaur -Syu emacs-pgtk-native-comp-git`

**** flatpak

     https://github.com/fejfighter/pgtk-emacs-flatpak

     - third party pkgs

     m-x package-list-packages, then u followed by x

*** assumptions

    - recent emacs compiled from the gccemacs branch with json support (recommended)

    - typical linux commands need to be available on path: find, grep, netcat, git, bash, ... (required)

    - adobe source code pro font (required)

    - for bash: i prefer installing shellcheck-bin and only using that as it has better diagnostics
      than bash-language-server. (recommended)

    - for python: `pip install --user pipenv python-language-server[all]`

      after that, eglot and lsp should be working automatically.

      if i want to setup a pipenv project with project dependency tracking, i'll do something like,

      `pipenv install --dev --pre python-language-server[all]`

      in the project directory... after that `pipenv run emacs` to use the environment that way.
      another option is using pipenv.el to activate the environment from an emacs buffer, but
      i prefer starting an emacs instance in the environment manually.

*** key binds

    - default emacs binds (unless you enable evil)

    - principally, we want to use short M-x aliases, while also putting global function binds on C-c and
      language specific binds on M-m prefixes

    - do look at [[https://github.com/grandfoobah/spartan-emacs/blob/master/spartan-layers/spartan-binds-global.el][spartan-binds-global.el]] to get
      the general idea, however.

      M-x ff (find files) ,
      M-x rg (rgrep files) ,
      M-x kr (browse-kill-ring) ,
      M-x ed (ediff) ,
      M-x git (magit) ,
      M-x lint (flymake) ,
      M-x tb (termbin) ,
      M-x sh (better-shell) ,
      <f5> (compile) ,
      <f6> (script execute) ...

    - also see [[https://github.com/grandfoobah/spartan-emacs/blob/master/spartan-layers/spartan-eglot.el][spartan-eglot.el]] for language-server-protocol binds

    - and language-specific files, see e.g. [[https://github.com/grandfoobah/spartan-emacs/blob/master/spartan-layers/spartan-python.el][spartan-python.el]]

    - lastly, if not using evil, I recommend swapping left-alt with left-control in your desktop settings for ergonomic reasons. I've been doing it for years,
      and it basically solves the infamous "Emacs pinky" RSI issue.

*** contribute

    - feel free to submit simple layers similar to [[https://github.com/grandfoobah/spartan-emacs/blob/master/spartan-layers/spartan-evil.el][spartan-evil.el]]

*** license

    - free software, public domain, no warranty

    - happy hacking
