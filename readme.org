* spartan emacs

  #+ATTR_HTML: :style margin-left: auto; margin-right: auto;
  [[spartan-emacs.jpg]]

***** when [[https://github.com/technomancy/emacs-starter-kit][emacs-starter-kit]] is too elitist and spacemacs/doom/prelude/purcell/radian/... are too bloated.

*** features:

    - simple, clean configuration with minimal abstraction
    - prefer built-ins for simplicity, performance, reliability and security reasons
    - no syntax highlighting
    - auto bootstrap self
    - doesn't mess with use-package, deferral, the pdumper -- doesn't care about start time -- still starts in 0.54 seconds on my 10 year old laptop
    - tested on Linux, but should work also work fine on any gnu/bsd/macos base
    - tested against latest pgtk gccemacs with native json parsing with eglot (language server protocol) for ultimate performance (not required, just recommended)

*** security conscious

    - audit third party packages and track them in vetted/
    - for larger, [difficult to audit] but well reputed third-party packages: prefer gnu elpa > melpa
    - basically the only third-party packages being installed from repos are:

      magit (melpa stable)
      which pulls in:
      dash (gnu elpa)
      transient (melpa stable)
      with-editor  (melpa stable)

      eglot (gnu elpa, only depends on emacs)

*** languages preconfigured

    - lisp/scheme
    - bash
    - python

*** how to hack

    - fork repo, clone it, own it

*** how to update

    - config

    `git pull`

    - emacs

**** arch

    `pikaur -Syu emacs-pgtk-native-comp-git`

**** flatpak

     https://github.com/fejfighter/pgtk-emacs-flatpak

    - third party pkgs

    m-x package-list-packages, then u followed by x

*** assumptions

    - recent emacs compiled from the gccemacs branch with json support (recommended)

    - typical linux commands need to be available on path: find, grep, netcat, git, bash, ... (required)

    - for bash: i prefer installing shellcheck-bin and only using that as it has better diagnostics
      than bash-language-server. (recommended)

    - for python: `pip install --user pipenv python-language-server[all]`

      after that, eglot and lsp should be working automatically.

      if i want to setup a pipenv project with project dependency tracking, i'll do something like,

      `pipenv install --dev --pre python-language-server[all]`

      in the project directory... after that `pipenv run emacs` to use the environment that way.
      another option is using pipenv.el to activate the environment from an emacs buffer, but
      i prefer starting an emacs instance in the environment manually.

*** todo

    - document binds, consider discoverability with which-key
    - the idea is use default Emacs binds everywhere, C-c is for global binds, M-m is for language-local binds

*** license

    - free software, public domain, no warranty

    - happy hacking
