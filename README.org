* SPARTAN EMACS

  Finally, a simple base Emacs configuration framework

  [[spartan-theme.png]]

  A word for beginners:

  Spartan Emacs is a framework, not a starter kit. It does not teach Emacs. If you are new, and please begin by checking out ~M-x help-with-tutorial~.
  ~M-x~ means meta ~Alt~ + ~x~ and then ~help-with-tutorial~ Return (enter) to begin. One might follow up with ~An Introduction to Programming in Emacs Lisp~
  additionally. The manuals may all be found at https://www.gnu.org/software/emacs/manual/

** News

*** Sat 02 Sep 2023 04:03:11 PM MDT

3.0 Release - Major re-write

- Uses straight + use-package for version pinning. (We're done with MELPA and package.el now.)

  With this, we now provide version pins, hopefully for better stability long-term, one user can be sure he has the same package versions as another user.

  We're not deferring packages, currently -- actually the opposite, packages are configured with :demand.
  In my experience, this provides a less buggy experience in general.

- Added company mode.

- Packages auto-bootstrap. (Except more specialized language layers, those have to manually enabled.)

- Fixes all-around everywhere. Lots of code removed in various places.


** QUICK INSTALL

   #+BEGIN_SRC bash
     git clone https://github.com/grandfoobah/spartan-emacs.git ~/.emacs.d
   #+END_SRC

   There are better ways, probably -- using symlinks. DYOR.

*** FEATURES

    - KISS, clean configuration and a comprehensible layers system
    - Uses lightweight, mostly-vanilla configured layer packages
    - Straight + use-package version version pinning for greater stability
    - Install and use any theme quite easily by modifying spartan-themes.el
    - Popular langs come with optional layers that are preconfigured with the best modes, and intelligent LSP auto-completion via company-mode integration and Eglot
    - Project Awareness is available with Projectile, VC with Magit
    - Support for Evil mode with spartan-evil layer
    - Load time with all layers enabled is around 2 seconds  without resorting to use-package, deferrals, pdumper or hacks.
    - Tested on Linux, but should work also work fine anywhere for the most part.
    - Tuned for [[https://github.com/grandfoobah/spartan-emacs/blob/master/spartan-layers/spartan-performance.el][ultimate performance]] using the latest *pgtk* *gccemacs* with native *json* parsing with *eglot* language server protocol  (not required, just recommended.) Debian 12 emacs comes out of the box with support for these features enabled now.

*** LAYERS

    - Edit ~init.el~ to enable additional language layers, then restart

**** HOW LAYERS WORK

    - Enabled layer packages are installed during init
    - Then layer packages are configured in the after-init-hook
    - Finally layer packages may be user local customized in ~~/.emacs.d/spartan.d/~

      (all lisp files in spartan.d/ load last, during the emacs-startup-hook)

*** MINIMAL LANGUAGE LAYERS PRECONFIGURED

The idea here is to provde everywhere the get up and going configuration, this means proper syntax support,
auto-completion and find definition, etc. via eglot's minimal language server protocol implementation.
Some of the language modes also include repls. Debugging is provided within many of the languages itself,
e.g. Python and Ruby have builtin debuggers. With C, one may use M-x ~gdb' with 'gdb', etc.

With compiled languages, one might use <f5> and set the compile command to something instead of make if needed, etc.

    - Emacs Lisp (paredit, builtins)
    - C / C++ (lsp)
    - Bash  (shellcheck)
    - Python (lsp)
    - Ruby (lsp)
    - Rust (lsp)
    - Go (lsp)
    - Javascript / Typescript (lsp)
    - Terraform (lsp)
    - Nix (just the mode)

*** HOW TO UPDATE

    - *git pull*

      Note:

      Normally, we should be able to just pull this repo, restart Emacs and execute M-x ~straight-thaw-versions~

      But if you're upgrading from <3.0 prior versions of spartan-emacs, I'd recommend cloning the project again.

    - *Restart Emacs*

      or ~M-x load-file ~/.emacs.d/init.el~ and what have you.

    - *M-x straight-thaw-versions*

      To be honest, I'm not entirely sure based on my reading of Radian's docs whether this is necessary. But it is helpful to know, that this is
      the way to revert packages back to the pinned versions. In one place, it sounds like this automatically takes place on a fresh bootstrap of straight with Emacs.
      But in another place, it sounds like we need to run this command.

*** BINDS

    - Default emacs binds (unless you enable evil.)

    - Short M-x aliases and the fuzzy completion from there as needed.

      See [[https://github.com/grandfoobah/spartan-emacs/blob/master/spartan-layers/spartan-binds-global.el][spartan-binds-global.el]] to get it.

      Also see [[https://github.com/grandfoobah/spartan-emacs/blob/master/spartan-layers/spartan-eglot.el][spartan-eglot.el]] for language-server-protocol binds

    - Language mode specifc binds should be handled by the mode upstream or by the individual user.

    - Overrides go in ~.emacs.d/spartan.d/~
